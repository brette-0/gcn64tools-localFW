include version.inc
VERSION_STR=\"$(VERSION)\"

CFLAGS=-Wall --std=gnu99 -DVERSION_STR=$(VERSION_STR) -I. -Irntlib $(HIDAPI_CFLAGS) $(ZLIB_CFLAGS) $(PLATFORM_CFLAGS) -O3
LDFLAGS=$(HIDAPI_LDFLAGS) $(ZLIB_LDFLAGS) $(PLATFORM_LDFLAGS)


PROGS=gcn64ctl mempak_ls mempak_format mempak_extract_note mempak_insert_note mempak_rm mempak_convert gcn64ctl_gui
PROGSEXE=$(patsubst %,%$(EXEEXT),$(PROGS))

MEMPAKLIB_OBJS=mempak.o mempak_fs.o $(COMPAT_OBJS)
GUI_OBJS=gcn64ctl_gui.o gui_mpkedit.o gui_fwupd.o gui_logger.o gui_dfu_programmer.o gui_gc2n64_manager.o gui_update_progress_dialog.o gui_xferpak.o gui_psx_memcard.o resources.o
COMMON_OBJS=raphnetadapter.o gcn64lib.o wusbmotelib.o x2gcn64_adapters.o delay.o hexdump.o ihex.o ihex_signature.o mempak_gcn64usb.o xferpak.o xferpak_tools.o gbcart.o uiio.o timer.o mempak_fill.o pcelib.o psxlib.o db9lib.o maplelib.o

.PHONY : clean install

VPATH=./rntlib

all: $(PROGSEXE) gui.xml


gcn64ctl_gui$(EXEEXT): $(GUI_OBJS) $(COMMON_OBJS) uiio_gtk.o $(MEMPAKLIB_OBJS)
	$(LD) $^ $(LDFLAGS) $(GTK_LDFLAGS) -o $@ $(EXTRA_LDFLAGS)

gcn64ctl$(EXEEXT): main.o $(COMMON_OBJS) perftest.o mempak_stresstest.o biosensor.o $(MEMPAKLIB_OBJS) pollraw.o usbtest.o
	$(LD) $^ $(LDFLAGS) -o $@

app.o: app.rc icon.ico
	$(WINDRES) app.rc -o app.o

gui.xml: gcn64cfg.glade
	grep -v requires gcn64cfg.glade > gui.xml

resources.c: $(RESOURCES) gui.xml
	$(GLIB_CRES) $(RES_FILE) --target=$@ --sourcedir=. --generate-source resources.xml

resources.o: resources.c
	$(CC) $(CFLAGS) $(GTK_CFLAGS) -c $<

gcn64ctl_gui.o: gcn64ctl_gui.c gcn64ctl_gui.h
	$(CC) $(CFLAGS) $(GTK_CFLAGS) -c $<

gui_%.o: gui_%.c gui_%.h
	$(CC) $(CFLAGS) $(GTK_CFLAGS) -c $<

uiio_gtk.o: uiio_gtk.c uiio_gtk.h
	$(CC) $(CFLAGS) $(GTK_CFLAGS) -c $<

mempak_convert$(EXEEXT): mempak_convert.o $(MEMPAKLIB_OBJS)
	$(LD) $^ $(LDFLAGS) -o $@

mempak_rm$(EXEEXT): mempak_rm.o $(MEMPAKLIB_OBJS)
	$(LD) $^ $(LDFLAGS) -o $@

mempak_insert_note$(EXEEXT): mempak_insert_note.o $(MEMPAKLIB_OBJS)
	$(LD) $^ $(LDFLAGS) -o $@

mempak_extract_note$(EXEEXT): mempak_extract_note.o $(MEMPAKLIB_OBJS)
	$(LD) $^ $(LDFLAGS) -o $@

mempak_ls$(EXEEXT): mempak_ls.o $(MEMPAKLIB_OBJS)
	$(LD) $^ $(LDFLAGS) -o $@

mempak_format$(EXEEXT): mempak_format.o $(MEMPAKLIB_OBJS)
	$(LD) $^ $(LDFLAGS) -o $@


%.o: %.c %.h
	$(CC) $(CFLAGS) -c $<

clean:
	rm -f *.o $(PROGSEXE)


